[Public]
Object=(Name=Editor.MasterCommandlet,Class=Class,MetaClass=Core.Commandlet)
;Object=(Name=Editor.MakeCommandlet,Class=Class,MetaClass=Core.Commandlet)
Object=(Name=Editor.ConformCommandlet,Class=Class,MetaClass=Core.Commandlet)
Object=(Name=Editor.BatchExportCommandlet,Class=Class,MetaClass=Core.Commandlet)
Object=(Name=Editor.MergeDXTCommandlet,Class=Class,MetaClass=Core.Commandlet)
Object=(Name=Editor.PackageFlagCommandlet,Class=Class,MetaClass=Core.Commandlet)
Object=(Name=Editor.DataRipCommandlet,Class=Class,MetaClass=Core.Commandlet)
Object=(Name=Editor.PkgCommandlet,Class=Class,MetaClass=Core.Commandlet)
Object=(Name=Editor.MapConvertCommandlet,Class=Class,MetaClass=Core.Commandlet)
Object=(Name=Editor.DXTConvertCommandlet,Class=Class,MetaClass=Core.Commandlet)
Object=(Name=Editor.AnalyzeContentCommandlet,Class=Class,MetaClass=Core.Commandlet)
Object=(Name=PSX2Convert.PSX2ConvertCommandlet,Class=Class,MetaClass=Core.Commandlet)
Object=(Name=PSX2Convert.PSX2MusicCommandlet,Class=Class,MetaClass=Core.Commandlet)
Object=(Name=GCNConvert.GCNConvertCommandlet,Class=Class,MetaClass=Core.Commandlet)
Object=(Name=Editor.DumpIntCommandlet,Class=Class,MetaClass=Core.Commandlet)
Object=(Name=Editor.ExecMacroCommandlet,Class=Class,MetaClass=Core.Commandlet)
Object=(Name=Editor.RebuildMoppsCommandlet,Class=Class,MetaClass=Core.Commandlet)
Object=(Name=Editor.CompressNormalMapsCommandlet,Class=Class,MetaClass=Core.Commandlet)
Object=(Name=Editor.SetInstancePropertyCommandlet,Class=Class,MetaClass=Core.Commandlet)

Preferences=(Caption="Editor",Parent="Advanced Options")
Preferences=(Caption="Advanced",Parent="Editor",Class=Editor.EditorEngine,Immediate=True,Category=Advanced)
Preferences=(Caption="Colors",Parent="Editor",Class=Editor.EditorEngine,Immediate=True,Category=Colors)
Preferences=(Caption="Grid",Parent="Editor",Class=Editor.EditorEngine,Immediate=True,Category=Grid)
Preferences=(Caption="Rotation Grid",Parent="Editor",Class=Editor.EditorEngine,Immediate=True,Category=RotationGrid)

[ExecMacroCommandlet]
HelpCmd=execmacro
HelpOneLiner=Execute an editor macro script file.
HelpUsage=execmacro scriptfile
HelpParm[0]=The file name of the script to run.  Note it MUST be a non-level specific script, like creating new fonts.


[SetInstancePropertyCommandlet]
HelpCmd=setinstanceproperty
HelpOneLiner=Set a property on an object instance present in one or more maps
HelpUsage=setinstanceproperty -nobind -ObjectClass -InstanceOuterAncestor -PropertyName -"PropertyValueAsText" Map_A Map_B ... Map_Last
HelpParm[0]=

[CompressNormalMapsCommandlet]
HelpCmd=compressnormalmaps
HelpOneLiner=Compress normal maps in packages to a specific format
HelpUsage=compressnormalmapps informat=INFMT outformat=OUTFMT packages=WILDCARD <verbose=[true|false]>
HelpParm[0]=INFMT
HelpDesc[0]=The original format of normal maps that should be compressed; must be one of [any|rgba8|cxv8u8|dxt5n]
HelpParm[0]=OUTFMT
HelpDesc[0]=The format to which to compress the normal maps; must be one of [cxv8u8|dxt5n]
HelpParm[0]=WILDCARD
HelpDesc[0]=A wildcard that matches the names of one or more texture packages (e.g., "Weapon*Tex.*")

[RebuildMoppsCommandlet]
HelpCmd=rebuildmopps
HelpOneLiner=Rebuild the Havok MOPP for one or more maps
HelpUsage=rebuildmopp Map_A Map_B ... Map_Last
HelpParm[0]=The name of the map for which the MOPP should be rebuilt

[MasterCommandlet]
HelpCmd=master
HelpOneLiner=Build master installer files
HelpUsage=master [-option...] [parm=value]...
HelpParm[0]=MasterPath
HelpDesc[0]=Root directory to copy source files from
HelpParm[1]=SrcPath
HelpDesc[1]=Root directory to copy source (release) files to
HelpParm[2]=RefPath
HelpDesc[2]=Path for delta-compressed path reference

[MapConvertCommandlet]
HelpCmd=mapconvert
HelpOneLiner=Converts Maps from old format to new (no brush transforms)
HelpUsage=mapconvert SrcFilename DstFilename
HelpParm[0]=SrcFilename
HelpDesc[0]=The map filename to read from
HelpParm[1]=DstFilename
HelpDesc[1]=The map filename to write to

[ConformCommandlet]
HelpCmd=conform
HelpOneLiner=Generate conforming binary files
HelpUsage=conform existing_file.ext old_file.ext
HelpParm[0]=existingfile.ext
HelpDesc[0]=Existing binary file to load, conform, and save
HelpParm[1]=oldfile.ext
HelpDesc[1]=Old file to make source file binary compatible with

[PkgCommandlet]
HelpCmd=pkg
HelpOneLiner=Imports/Exports data to/from packages using directory structures.
HelpUsage=pkg [import/export] [texture/sound] [packagename] [directory]
HelpParm[0]=import/export
HelpDesc[0]=What you are attempting to do with the data
HelpParm[1]=texture/sound
HelpDesc[1]=The type of package you are working with
HelpParm[2]=packagename
HelpDesc[2]=The package you are creating/exporting from
HelpParm[3]=directory
HelpDesc[3]=The directory to read from/write to

[PackageFlagCommandlet]
HelpCmd=packageflag
HelpOneLiner=Set package flags in package files
HelpUsage=packageflag src.ext [dest.ext <+|->flag [<+|->flag] ...]
HelpParm[0]=src.ext
HelpDesc[0]=Existing package file to load
HelpParm[1]=dest.exe
HelpDesc[1]=Name of new package file with the new flag settings
HelpParm[2]=flag
HelpDesc[2]=+ to set a flag, or - to remove a flag, followed by one of:
HelpParm[3]=" "
HelpDesc[3]="  AllowDownload"
HelpParm[4]=" "
HelpDesc[4]="  ClientOptional"
HelpParm[5]=" "
HelpDesc[5]="  ServerSideOnly"
HelpParm[6]=" "
HelpDesc[6]="  BrokenLinks"
HelpParm[7]=" "
HelpDesc[7]="  Unsecure"

[MakeCommandlet]
HelpCmd=make
HelpOneLiner=Rebuild UnrealScript packages
HelpUsage=make [-option...] [parm=value]...
HelpParm[0]=Silent
HelpDesc[0]=No prompts; assume "yes" to all questions
HelpParm[1]=NoBind
HelpDesc[1]=Don't force native functions to be bound to DLLs
HelpParm[2]=All
HelpDesc[2]=Clean rebuild (otherwise rebuild is incremental)

[DXTConvertCommandlet]
HelpCmd=dxtconvert
HelpOneLiner=Convert DXT3/5 textures to DXT1/ RGBA
HelpUsage=dxtconvert srcpath destpath
HelpParm[0]=srcpath
HelpDesc[0]=Path containing source files
HelpParm[1]=destpath
HelpDesc[1]=Path for destination files


[AnalyzeContentCommandlet]
HelpCmd=analyzecontent
HelpOneLiner=Analyzes map
HelpUsage=analyzecontent mapname
HelpParm[0]=mapname
HelpDesc[0]=Path to a map file


[BatchExportCommandlet]
HelpCmd=batchexport
HelpOneLiner=Export objects in bulk
HelpUsage=batchexport package.ext classname export_ext
HelpParm[0]=package.ext
HelpDesc[0]=Package whose objects you wish to export
HelpParm[1]=classname
HelpDesc[1]=Class of object to export
HelpParm[2]=export_ext
HelpDesc[2]=File extension to export to
HelpParm[3]=path
HelpDesc[3]=Path to export files to, like c:\MyPath

[DataRipCommandlet]
HelpCmd=datarip
HelpOneLiner=Create a package with Texture, Music and Sound data ripped out.
HelpUsage=datarip srcpackage.ext dstpackage.ext
HelpParm[0]=srcpackage.ext
HelpDesc[0]=Source Package
HelpParm[1]=dstpackage.ext
HelpDesc[1]=Destination Package
